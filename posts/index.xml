<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 云端漫步</title>
    <link>/posts/</link>
    <description>Recent content in Posts on 云端漫步</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Aug 2020 17:07:26 +0800</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Protobuf 简明指南(Python语言)</title>
      <link>/posts/protobuf-tutorial/</link>
      <pubDate>Wed, 19 Aug 2020 17:07:26 +0800</pubDate>
      
      <guid>/posts/protobuf-tutorial/</guid>
      <description>&lt;p&gt;protobuf消息协议能够进一步减少消息体字节数, 从而提升系统运行效率; 接口明确定义字段, 是系统更加严谨可控.
本文简单总结一下python操作protobuf的方法, 以供参考.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>图的拓扑排序和判断是否有环</title>
      <link>/posts/graph_topolgical_sort/</link>
      <pubDate>Wed, 12 Aug 2020 18:46:31 +0800</pubDate>
      
      <guid>/posts/graph_topolgical_sort/</guid>
      <description>&lt;p&gt;如何判断模块间是否有循环依赖? 如何根据依赖关系对图进行排序?
这就涉及到图的算法: 判断DAG(有向无环图, Directed acyclic graph).
本文整理两种解决方案, 见代码.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>图片水印：光晕效果</title>
      <link>/posts/image-watermark/</link>
      <pubDate>Thu, 26 Mar 2020 17:16:55 +0800</pubDate>
      
      <guid>/posts/image-watermark/</guid>
      <description>&lt;p&gt;一个线性渐变的光晕，opencv cpp实现&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>图像平移矩阵</title>
      <link>/posts/image-transform/</link>
      <pubDate>Mon, 23 Sep 2019 16:16:07 +0800</pubDate>
      
      <guid>/posts/image-transform/</guid>
      <description>&lt;p&gt;图像乘以单应性矩阵H进行透视变换时
H为单位矩阵，变换后的图和原图一致
H[0][3]的值代表右移尺度
H[1][3]的值代表下移尺度&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>图像拼接算法</title>
      <link>/posts/image-stitch/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/image-stitch/</guid>
      <description>&lt;p&gt;图片拼接是一个很常见的应用，本文总结一下通过OpenCV实现多张图的全景拼接&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>